<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
	<script>console.log("printi, by Fons van der Plas (http://github.com/fons-) 🌈");</script>
    <meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, user-scalable=no">
	<link href="https://fonts.googleapis.com/css?family=Courgette|Itim" rel="stylesheet">
    <title>printi</title>
	<style>
		body {
			background-color: #ffe3e3;
			margin: 0px;
		}
		#titlecontainer {
			letter-spacing: 3px;
			background-color: #ffefef;
			font-family: 'Courgette', sans-serif;
		}
		#printername {
			text-align: left;
			width: 1000px;
			animation: fadeout 3.0s forwards;
			-webkit-animation: fadeout 3.0s forwards;
		}
		h1 {
			font-weight: normal;
		}
		#receiptcontainer {
			padding-top: 20px;
			overflow: hidden;
		}

		#receipt {
			padding: 12px;
			border: 5px solid white;
			background-color: white;
			/*
				--Timing--
				Printer speed: 4.5 inch per second = 114.3 mm/s
				Receipt width: 80 mm or 250 px
				=> Printer speed: 114.3 * 250 / 80 = 357.1875 px/s
				Transition distance: 1000px
				=> Transition duration: 1000 / 357.1875 = 2.8 s
			*/
			transition: margin 2800ms;
			-webkit-transition: margin 2800ms;
			transition-timing-function: linear;
			-webkit-transition-timing-function: linear;
		}

		#preview{
			width: 100%;
			position: relative;
			display: none;
		}

		#curtain {
			transition: 200ms linear left;
			position: absolute;
			right: 0px;
			top: 0px;
			height: 100%;
			width: 0%;
			background-color: rgba(255, 255, 255, 0.8);
		}

		#previewimg {
			max-width: 100%;
			height: auto;
			transition: 500ms filter linear;
			-webkit-transition: 500ms -webkit-filter linear;
		}

		#formcontainer {
			overflow-x: hidden;
		}

		#explain {
			
			text-decoration: underline;
			font-family: 'Courgette';
			margin-top: 400px;
			padding-bottom: 50px;
		}

		#explain a {
			color: black;
			opacity: .6;
		}

		.printed {
			margin-top: -1000px!important;
		}

		.bwfilter {
			filter: grayscale(100%);
			-webkit-filter: grayscale(100%);
		}

		.wiggler {
			animation: wiggle 200ms;
			animation-iteration-count: infinite;
			-webkit-animation: wiggle 200ms;
			-webkit-animation-iteration-count: infinite;
		}

		@keyframes fadeout {
			0% {
				opacity: .6;
			}
			50% {opacity: .6; }
			100% {opacity: 0; }
		}

		@keyframes wiggle {
		  0% { transform: rotate(0deg); }
		  25% { transform: rotate(-1deg); }
		  50% { transform: rotate(0deg); }
		  75% { transform: rotate(1deg); }
		  100% { transform: rotate(0deg); }
		}
	</style>
</head>
<body>
	<div style="width: 100%; overflow: hidden;" id="titlecontainer">
		<div style="margin: 0 auto; width: 250px; height: 80px; padding-top: 30px; padding-bottom: 20px; align-content: center; text-align: center;">
			<div style="position: relative; ">
				
				<div style="position: absolute; width: 100%;"><h1><img src="/Content/printi_logo_transparent.svg" width="100" height="34" alt="printi" title="printi" /></h1></div>
				<div style="position: absolute; left: 180px; bottom: -76px;" id="printername"><h1>@Model.PrinterSubDir</h1></div>
			</div>
		</div>
	</div>
	<div style="margin: 0 auto; width: 250px; align-content: center; text-align: center;">
		
		
		<div id="receiptcontainer">
			<div id="receipt">
				<div id="preview">
					<img id="previewimg" src="#" width="250" />
					<div id="curtain"></div>
				</div>
				<div id="formcontainer">
					<form id="leform" action="photoupload" method="post" enctype="multipart/form-data" target="responseframe">
						<input id="filepicker" type="file" name="theshiz" accept="image/*">
						<!--<br /><br />
			<input type="submit">-->
					</form>
				</div>
			</div>
		</div>
		<div id="explain">
			<a href="https://github.com/fons-/printi/blob/master/README.md">What is printi?</a>
		</div>
		<iframe name="responseframe" style="display: none;"></iframe>
	</div>


	<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
	<script>
		$(document).ready(function () {
			startUpload = function () {


				var xhr = new XMLHttpRequest();
				xhr.upload.onprogress = function (e) {
					console.log(e);
					var reverseprogress = ((e.total - e.loaded) / e.total) * 100;
					$("#curtain").attr("style", "width: " + reverseprogress + "%;");
					if (reverseprogress < 5 && !$("#receiptcontainer").hasClass("wiggler")) {
						$("#receiptcontainer").addClass("wiggler");
					}
				};
				xhr.onload = function (e) {

					$("#curtain").attr("style", "width: 0%;");


					console.log(e);
					$("#previewimg").addClass("bwfilter");
					setTimeout(function () {
						$("#receiptcontainer").removeClass("wiggler")
						$("#receipt").addClass("printed");
						setTimeout(function () { location.reload() }, 2000);
					}, 1000);
				};
				xhr.open('POST', '/api/submitimages/@Model.PrinterName', true);
				var data = new FormData();
				for (var i = 0; i < this.files.length; i++) {
					var file = this.files[i];
					console.log(file)

					if (file.type.match("image.*")) {
						try {
							var immie = document.createElement("img");
							var reader = new FileReader()
							reader.onload = function (e) {
								$("#previewimg").attr("src", e.target.result);
								$("#preview").attr("style", "display: block;");
								$("#formcontainer").attr("style", "display: none;");

								immie.src = e.target.result;

								var width = immie.width;
								var height = immie.height;

								var PAGEWIDTH = @Model.PageWidth // 576 for printi classic, 384 for printi mini
								
								while (Math.min(width, height) >= PAGEWIDTH / 2) {
									width /= 2;
									height /= 2;
									console.log("scaling down 2x");
								}

								var canvas = document.createElement("canvas");
								canvas.width = width;
								canvas.height = height;
								var ctx = canvas.getContext("2d");
								ctx.drawImage(immie, 0, 0, width, height)


								var datayumyum = canvas.toDataURL("image/jpeg", .8)
								var bytestring;
								if (datayumyum.split(',')[0].indexOf('base64') >= 0) {
									bytestring = atob(datayumyum.split(',')[1]);
								} else {
									bytestring = unescape(datayumyum.split(',')[1]);
								}
								var mime = datayumyum.split(',')[0].split(':')[1].split(';')[0];
								var ia = new Uint8Array(bytestring.length);
								for (var j = 0; j < bytestring.length; j++) {
									ia[j] = bytestring.charCodeAt(j);
								}
								var booboo = new Blob([ia], { type: mime });

								data.append("file" + i, booboo);
							}
							reader.readAsDataURL(file);
						} catch (err) {
							data.append("fileFAILEDTOSCALE" + i, file);
						}
					} else {
						data.append('file' + i, this.files[i]);
					}


					data.append('file' + i, this.files[i]);
				}
				xhr.send(data);
			}

			document.getElementById("filepicker").onchange = function () {
				startUpload.call(this);
			};

			document.addEventListener('paste', function (e) {
				if (e.clipboardData) {
					var items = e.clipboardData.items;
					var imagesPasted = false;
					this.files = [];
					for (var i = 0; i < items.length; i++)
					{
						if (items[i].type.indexOf("image") >= 0)
						{
							imagesPasted = true;
							var blob = items[i].getAsFile();
							this.files.push(blob);
						}
						console.log(items[i].type)
						if (items[i].type.indexOf("text") >= 0) {
							items[i].getAsString(function (s) {

								var xhr = new XMLHttpRequest();
								xhr.open('POST', 'https://url.printi.me/api/url/@Model.PrinterName', true);
								xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
								var data = JSON.stringify({url: s});
								xhr.send(data);


								//$("#previewimg").attr("src", source);
								$("#preview").attr("style", "display: block;");
								$("#formcontainer").attr("style", "dvisplay: none;");
							});
							
						}
					}
					if (imagesPasted)
					{
						startUpload.call(this);
					}
					e.preventDefault();
				}
			}, false);
		});
		
	</script>
</body>
</html>